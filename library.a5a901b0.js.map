{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-eb3a1c9e6e196fc7.js","src/js/page-watched.js","src/js/picture-not-found.js","node_modules/@parcel/runtime-js/lib/runtime-3293e3a759f98b18.js","src/js/page-queued.js","src/js/queue-watched-modal.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1zJhX\\\":\\\"library.a5a901b0.js\\\",\\\"5W5ZI\\\":\\\"zdun.5b228a39.png\\\"}\"));","import cardsMarkup from '../js/cards-markup';\nimport { filmsNotFoundTwo } from '../js/picture-not-found';\n\nconst btnWatched = document.querySelector('#watched-btn');\nconst btnQueue = document.querySelector('#queue-btn');\nconst sectionEl = document.querySelector('.films-catalog');\n\naddWatchedMarkup();\n\nbtnWatched.addEventListener('click', addWatchedMarkup);\n\nfunction addWatchedMarkup() {\n    const markupArr = localStorage.getItem('watched-movies');\n    btnWatched.classList.add('library_btn--active');\n    btnQueue.classList.remove('library_btn--active');\n    if(!markupArr) {\n        filmsNotFoundTwo();\n    } else {\n        const markupArrParse = JSON.parse(markupArr);\n        const strokeMarkup = cardsMarkup(markupArrParse);\n        sectionEl.innerHTML = strokeMarkup;\n    }\n}\n\n","import zhdun from '../images/waiting/zdun.png';\n\nconst imgNotFound = `<div class='not-found_container'>\n<h2 class=\"library_not-found-text\">No movies have been added yet. Select the desired movies on the <a href=\"./index.html\" class=\"link_to-home\">home page.</a></h1>\n<img src=\"${zhdun}\" width=\"400\" class='img_not-found'>\n    </div>`;\n\nfunction filmsNotFound() {\n  const containerEl = document.querySelector('.container-catalog');\n\n  containerEl.innerHTML = imgNotFound;\n}\n\nfunction filmsNotFoundTwo() {\n  const containerEl = document.querySelector('.films-catalog');\n\n  containerEl.innerHTML = imgNotFound;\n}\n\nexport { filmsNotFound, filmsNotFoundTwo };\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5W5ZI\")).toString();","import cardsMarkup from '../js/cards-markup';\nimport { filmsNotFoundTwo } from '../js/picture-not-found';\n\nconst library = document.querySelector('.films-catalog');\nconst watchedBtn = document.querySelector(`#watched-btn`);\nconst queueBtn = document.querySelector(`#queue-btn`);\n\nqueueBtn.addEventListener('click', onQueueBtn);\nfunction onQueueBtn() {\n  const queuedMovies = JSON.parse(localStorage.getItem('queued-movies'));\n\n  watchedBtn.classList.remove('library_btn--active');\n  queueBtn.classList.add('library_btn--active');\n\n  if (!queuedMovies) {\n    filmsNotFoundTwo();\n    return;\n  }\n  library.innerHTML = cardsMarkup(queuedMovies);\n}\n","import localStorageLibrary from './modalBtns.js';\n// Получение объекта из localStorage\n\n// Парс если в watched\nlet currentMovies = JSON.parse(localStorage.getItem('watched-movies'));\n\n// Парс если в queue\nconst queue = document.querySelector('[data-queue]');\nqueue.addEventListener('click', addQueueJson);\nconsole.log(queue);\nfunction addQueueJson() {\n  currentMovies = JSON.parse(localStorage.getItem('queued-movies'));\n  console.log(currentMovies);\n  return currentMovies;\n}\n\n// <!-- функция открытия и разметки модалки\nfunction modalOpen() {\n  const refs = {\n    openModalCard: document.querySelector('.container-catalog'),\n    modal: document.querySelector('[data-modal]'),\n    modalContainer: document.querySelector('.modal-container'),\n  };\n\n  refs.openModalCard.addEventListener('click', openModal);\n  function openModal(evt) {\n    const filmCard = evt.target.closest('.film-card__link');\n    if (!filmCard) {\n      return;\n    }\n    refs.modal.classList.toggle('is-hidden');\n\n    window.addEventListener('keydown', onEscapeKeyPress);\n    // получение id  по нажатому объекту\n    const filmId = Number(filmCard.dataset.id);\n    console.log(filmId);\n\n    const currentFilm = currentMovies.find(({ id }) => id === filmId);\n   \n    // ФУНКЦИЯ РАЗМЕТКИ МОДАЛКИ\n    function modalMarkup() {\n      //  формирование массива жанров карточки :\n      const genresArr = currentFilm.genre_ids;\n      const genresObj = addGenre();\n      let genresFilm = [];\n      genresArr.map(el => genresFilm.push(genresObj[el]));\n\n      // Подстановка данных в шаблонный рядок модалки\n      const imgUrl = `https://image.tmdb.org/t/p/w500${currentFilm.poster_path}`;\n      console.log(currentFilm.poster_path);\n      const title = currentFilm.title;\n      const vote = Number(currentFilm.vote_average).toFixed(1);\n      const votes = currentFilm.vote_count;\n      const popularity = Number(currentFilm.popularity).toFixed(1);\n      let genre = genresFilm.join(', ');\n      if (!genre) {\n        genre = 'no information';\n      }\n      let about = currentFilm.overview;\n      if (!about) {\n        about = 'no information, but coming soon';\n      }\n\n      const markup = `<div class=\"img-box\">\n           <img\n             class=\"img-modal\"\n             src=\"${imgUrl}\"\n             alt=\"${title}\"\n             width=\"240px\"\n           />\n         </div>\n         <div class=\"content-box\">\n           <div class=\"text-box\">\n             <h2 class=\"modal-title\">${title}</h2>\n             <table>\n               <tbody class=\"tbody\">\n                 <tr>\n                   <td class=\"tbody-category\">Vote / Votes</td>\n                   <td class=\"tbody-vote\">${vote}</td>\n                   <td class=\"tbody-slash\">/</td>\n                   <td class=\"tbody-votes\">${votes}</td>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <td class=\"tbody-category\">Popularity</td>\n                   <td colspan=\"4\">${popularity}</td>\n                   <td></td>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <td class=\"tbody-category\">Original Title</td>\n                   <td class=\"tbody-category__text\" colspan=\"4\">${title}</td>\n                   <td></td>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <td class=\"tbody-category\">Genre</td>\n                   <td class=\"tbody-category__text\" colspan=\"4\">${genre}</td>\n                   <td></td>\n                   <td></td>\n                 </tr>\n               </tbody>\n             </table>\n      \n             <h3 class=\"modal-subtitle\">About</h3>\n             <p class=\"textAbout\">\n               ${about}\n             </p>\n           </div>\n           <div class=\"btn-container\">\n             <button class=\"js-toWatched btn-click-modal\">add to watched</button>\n             <button class=\"js-toQueue btn-click-modal\">add to queue</button>\n           </div>\n         </div>`;\n\n      refs.modalContainer.innerHTML = markup;\n    }\n    modalMarkup();\n    localStorageLibrary(currentFilm);\n  }\n}\nmodalOpen();\n\n// Функция закрытия модалки\nfunction modalClose() {\n  const refs = {\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n  window.removeEventListener('keydown', onEscapeKeyPress);\n}\nmodalClose();\n\n// Функция создания объекта жанров\nfunction addGenre() {\n  const genre = JSON.parse(localStorage.getItem('Genre'));\n\n  const genreId = genre.flatMap(el => el.id);\n  const genreName = genre.flatMap(el => el.name);\n  const genreObj = genreId.reduce(\n    (acc, id, i) => ({ ...acc, [id]: genreName[i] }),\n    {}\n  );\n\n  return genreObj;\n}\naddGenre();\n\n//закриття по бекдропу та Esc\nconst backdrop = document.querySelector('.backdrop');\nbackdrop.addEventListener('click', onBackdropClick);\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    document.querySelector('[data-modal]').classList.toggle('is-hidden');\n  }\n}\n\nfunction onEscapeKeyPress(event) {\n  console.log(event.code);\n  if (event.code === 'Escape') {\n    document.querySelector('[data-modal]').classList.toggle('is-hidden');\n  }\n}\n"],"names":["parcelRequire","register","JSON","parse","$lyvUQ","$d566b5652d63c73d$var$imgNotFound","$parcel$interopDefault","URL","resolve","import","meta","url","toString","$d566b5652d63c73d$export$64173803f27c2a58","document","querySelector","innerHTML","$4b16942bda54168a$var$btnWatched","$4b16942bda54168a$var$btnQueue","$4b16942bda54168a$var$sectionEl","$4b16942bda54168a$var$addWatchedMarkup","markupArr","localStorage","getItem","classList","add","remove","markupArrParse","strokeMarkup","default","addEventListener","$c46dc8afec212000$var$library","$c46dc8afec212000$var$watchedBtn","$c46dc8afec212000$var$queueBtn","queuedMovies","$fQz6f","$168feeaaa6bbf391$var$currentMovies","$168feeaaa6bbf391$var$queue","$168feeaaa6bbf391$var$addGenre","genre","genreId","flatMap","el","id","genreName","name","reduce","acc","i","console","log","refs","openModalCard","modal","modalContainer","evt","filmCard","target","closest","toggle","window","$168feeaaa6bbf391$var$onEscapeKeyPress","filmId","Number","dataset","currentFilm","find","genresArr","genre_ids","genresObj","genresFilm","map","push","imgUrl","poster_path","title","vote","vote_average","toFixed","votes","vote_count","popularity","join","about","overview","markup","modalMarkup","$168feeaaa6bbf391$var$modalOpen","closeModalBtn","removeEventListener","$168feeaaa6bbf391$var$modalClose","event","code","currentTarget"],"version":3,"file":"library.a5a901b0.js.map"}